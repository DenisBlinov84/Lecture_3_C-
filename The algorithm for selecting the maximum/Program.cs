// Алгоритм выбора максимального значения

// 1. Найти позицию минимального элемента в неотсортированной части массива
// 2. Произвести обмен этого значения со значением первой неотсортированной позиции
// 3. Повторять пока есть не отсортированные элементы

int[] arr = { 1, 5, 4, 3, 2, 6, 7, 1, 1 }; //заводим массив, который будем отсортировывать
// вывести подмассив на экран
void PrintArray(int[] array) //название PrintArray, в качестве аргумента приходит массив
{
    int count = array.Length; // получение количества элементов

    for (int i = 0; i < count; i++) // пробегаем по всем элементам массива 
    {
        Console.Write($"{array[i]} "); // показываем на экране

    }
    Console.WriteLine(); //выводим пустую строку после окончания цикла
}


//метод, который будет упорядочивать наш массив
void SelectionSort(int[] array)
{
    for (int i = 0; i < array.Length - 1; i++)
    {
        int minPosition = i; //запоминаем позицию элемента, с которым будем производить действия

        //ищем минимальный элемент
        for (int j = i + 1; j < array.Length; j++)
        {
            if (array[j] < array[minPosition]) minPosition = j;
        }

        // меняем значение минимальной позиции, с той позицией, которую мы нашли
        int temporary = array[i]; // присваиваем число с индексом рабочей позиции
        array[i] = array[minPosition]; // в итую позицию кладём новый элемент
        array[minPosition] = temporary; // кладём временный элемент
    }
}
PrintArray(arr); //arr - название метода
SelectionSort(arr);
PrintArray(arr);
